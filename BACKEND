import pandas as pd
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline 
import plotly.graph_objs as go
import plotly.figure_factory as ff
from plotly import tools
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
init_notebook_mode(connected=True)

import gc
from datetime import datetime 
from sklearn.model_selection import train_test_split
from sklearn.model_selection import KFold
from sklearn.metrics import roc_auc_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import AdaBoostClassifier
from catboost import CatBoostClassifier
from sklearn import svm
import lightgbm as lgb
from lightgbm import LGBMClassifier
import xgboost as xgb

pd.set_option('display.max_columns', 100)

RFC_METRIC = 'gini'  #métrique utilisée pour RandomForrestClassifier
NUM_ESTIMATORS = 100 #nombre d'estimateurs utilisés pour RandomForrestClassifier
NO_JOBS = 4#nombre de tâches parallèles utilisées pour RandomForrestClassifier


#TRAIN/VALIDATION/TEST SPLIT
#VALIDATION
VALID_SIZE = 0.20 # validation simple en utilisant train_test_split
TEST_SIZE = 0.20 # taille de test using_train_test_split

#CROSS-VALIDATION
NUMBER_KFOLDS = 5 #nombre de KFolds pour la validation croisée



RANDOM_STATE = 2018

MAX_ROUNDS = 1000 #lgb iterations

EARLY_STOP = 50 #lgb early stop 
OPT_ROUNDS = 1000  #To be adjusted based on best validation rounds
VERBOSE_EVAL = 50 #Print out metric result

IS_LOCAL = False

import os

df = pd.read_csv('BD.csv')

# Afficher les premières lignes du dataframe
print(df.head())
